apiVersion: apps/v1
kind: Deployment
metadata:
  name: hive-metastore
  namespace: hive-metastore
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hive-metastore
  template:
    metadata:
      labels:
        app: hive-metastore
    spec:
      initContainers:
        - name: schema-init
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          command:
            - /bin/bash
            - -c
            - |
              echo "Checking if Hive schema exists..."
              SCHEMA_COUNT=$(PGPASSWORD={{ .Values.postgres.password }} psql -h {{ .Values.postgres.host }} -U {{ .Values.postgres.user }} -d {{ .Values.postgres.db }} -tAc "SELECT COUNT(*) FROM information_schema.tables WHERE table_schema='public';")
              if [ "$SCHEMA_COUNT" = "0" ]; then
                echo "Initializing Hive Metastore schema..."
                schematool -initSchema -dbType postgres
              else
                echo "Hive schema already exists. Skipping initialization."
              fi
          env:
            - name: PGPASSWORD
              value: {{ .Values.postgres.password }}
          volumeMounts:
            - name: hive-config
              mountPath: /opt/hive/conf

        - name: hadoop-jars-init
          image: curlimages/curl:8.4.0
          command: ["/bin/sh", "-c"]
          args:
            - |
              mkdir -p /jars && \
              curl -L -o /jars/hadoop-aws-3.3.6.jar https://repo1.maven.org/maven2/org/apache/hadoop/hadoop-aws/3.3.6/hadoop-aws-3.3.6.jar && \
              curl -L -o /jars/hadoop-common-3.3.6.jar https://repo1.maven.org/maven2/org/apache/hadoop/hadoop-common/3.3.6/hadoop-common-3.3.6.jar && \
              curl -L -o /jars/hadoop-shaded-guava-1.1.0.jar https://repo1.maven.org/maven2/org/apache/hadoop/thirdparty/hadoop-shaded-guava/1.1.0/hadoop-shaded-guava-1.1.0.jar && \
              curl -L -o /jars/aws-java-sdk-core-1.12.262.jar https://repo1.maven.org/maven2/com/amazonaws/aws-java-sdk-core/1.12.262/aws-java-sdk-core-1.12.262.jar && \
              curl -L -o /jars/aws-java-sdk-s3-1.12.262.jar https://repo1.maven.org/maven2/com/amazonaws/aws-java-sdk-s3/1.12.262/aws-java-sdk-s3-1.12.262.jar && \
              curl -L -o /jars/postgresql-42.7.3.jar https://repo1.maven.org/maven2/org/postgresql/postgresql/42.7.3/postgresql-42.7.3.jar

          volumeMounts:
            - name: aux-jars
              mountPath: /jars

      containers:
        - name: metastore
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          command:
            - /opt/hive/bin/hive
            - --service
            - metastore
          ports:
            - containerPort: {{ .Values.metastore.port }}
          env:
            - name: HADOOP_HOME
              value: "/opt/hadoop"
            - name: HIVE_AUX_JARS_PATH
              value: "/opt/hive/aux-jars/*"
            - name: AWS_ACCESS_KEY_ID
              value: "minioadmin"
            - name: AWS_SECRET_ACCESS_KEY
              value: "minioadmin"
          volumeMounts:
            - name: hive-config
              mountPath: /opt/hive/conf
            - name: aux-jars
              mountPath: /opt/hive/aux-jars

      volumes:
        - name: hive-config
          configMap:
            name: hive-site
        - name: aux-jars
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: hive-metastore
  namespace: hive-metastore
spec:
  selector:
    app: hive-metastore
  ports:
    - protocol: TCP
      port: {{ .Values.metastore.port }}
      targetPort: {{ .Values.metastore.port }}
