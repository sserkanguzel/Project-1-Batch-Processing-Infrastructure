namespace: airflow

airflow:
  image:
    repository: ghcr.io/sserkanguzel/project-1-1-batch-processing-airflow
    tag: '2025-07-04-2056'

  executor: KubernetesExecutor

  kubernetesExecutor:
    podTemplate:
      configMapName: airflow-pod-template
      name: pod_template.yaml

  fernetKey: "bXKd_nJ7Yj0E309u7oh-cmXcFC89gi1IllSBl21Ku5g="
  secretKey: "Td_-CejX_6foYTgUzLXfrgVWvxlAuzp4Cemjf6J57b0"

  serviceAccountName: airflow

  initDbJob:
    enabled: false

  config:
    logging:
      base_log_folder: /opt/airflow/logs
      remote_logging: "False"

  logs:
    persistence:
      enabled: true
      existingClaim: airflow-logs-pvc

  extraVolumes:
    - name: airflow-shared
      persistentVolumeClaim:
        claimName: airflow-shared-pvc

  extraVolumeMounts:
    - name: airflow-shared
      mountPath: /opt/airflow/shared

scheduler:
  annotations:
    vault.hashicorp.com/agent-inject: "true"
    vault.hashicorp.com/role: "eso"
    vault.hashicorp.com/agent-inject-secret-sql: "kv/data/app-secrets/airflow/db"
    vault.hashicorp.com/agent-inject-template-sql: |
      {{`{{- with secret "kv/data/app-secrets/airflow/db" -}}`}}
      {{`export AIRFLOW__DATABASE__SQL_ALCHEMY_CONN="{{ .Data.data.sql_alchemy_conn }}"`}}
      {{`{{- end }}`}}

web:
  annotations:
    vault.hashicorp.com/agent-inject: "true"
    vault.hashicorp.com/role: "eso"
    vault.hashicorp.com/agent-inject-secret-sql: "kv/data/app-secrets/airflow/db"
    vault.hashicorp.com/agent-inject-template-sql: |
      {{`{{- with secret "kv/data/app-secrets/airflow/db" -}}`}}
      {{`export AIRFLOW__DATABASE__SQL_ALCHEMY_CONN="{{ .Data.data.sql_alchemy_conn }}"`}}
      {{`{{- end }}`}}

triggerer:
  enabled: true
  replicas: 1
  annotations:
    vault.hashicorp.com/agent-inject: "true"
    vault.hashicorp.com/role: "eso"
    vault.hashicorp.com/agent-inject-secret-sql: "kv/data/app-secrets/airflow/db"
    vault.hashicorp.com/agent-inject-template-sql: |
      {{`{{- with secret "kv/data/app-secrets/airflow/db" -}}`}}
      {{`export AIRFLOW__DATABASE__SQL_ALCHEMY_CONN="{{ .Data.data.sql_alchemy_conn }}"`}}
      {{`{{- end }}`}}
      
postgresql:
  enabled: true
  image: postgres:15-alpine
  annotations:
    vault.hashicorp.com/agent-inject: "true"
    vault.hashicorp.com/role: "eso"
    vault.hashicorp.com/agent-inject-secret-pg: "kv/data/app-secrets/airflow/db"
    vault.hashicorp.com/agent-inject-template-pg: |
      {{- with secret "kv/data/app-secrets/airflow/db" -}}
      export POSTGRES_USER="{{ .Data.data.user }}"
      export POSTGRES_PASSWORD="{{ .Data.data.password }}"
      export POSTGRES_DB="{{ .Data.data.db }}"
      {{- end }}
  initCommand: |
    source /vault/secrets/pg
    exec docker-entrypoint.sh postgres
  volume:
    name: postgres-data
    mountPath: /var/lib/postgresql/data
    type: emptyDir

service:
  webserver:
    type: NodePort
    port: 8080
