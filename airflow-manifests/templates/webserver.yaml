apiVersion: apps/v1
kind: Deployment
metadata:
  name: airflow-webserver
  namespace: {{ .Values.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: airflow-webserver
  template:
    metadata:
      labels:
        app: airflow-webserver
    spec:
      serviceAccountName: {{ .Values.airflow.serviceAccountName }}
      containers:
      - name: webserver
        image: "{{ .Values.airflow.image.repository }}:{{ .Values.airflow.image.tag }}"
        command: ["/bin/bash", "-c"]
        args:
          - |
            until pg_isready -h postgres-postgresql.airflow.svc.cluster.local -p 5432; do
              echo "Waiting for Postgres to be ready...";
              sleep 10;
            done;

            until psql -h postgres-postgresql.airflow.svc.cluster.local -c '\dt' | grep -q 'ab_user'; do
              echo "Waiting for Airflow metadata DB to be initialized...";
              sleep 5;
            done;

            exec airflow webserver
        ports:
        - containerPort: 8080
        env:
        - name: AIRFLOW__CORE__EXECUTOR
          value: {{ .Values.airflow.executor }}
        - name: AIRFLOW__KUBERNETES_EXECUTOR__NAMESPACE
          value: {{ .Values.namespace }}
        - name: AIRFLOW__CORE__FERNET_KEY
          value: {{ .Values.airflow.fernetKey }}
        - name: AIRFLOW__WEBSERVER__SECRET_KEY
          value: {{ .Values.airflow.secretKey }}
        - name: AIRFLOW__CORE__DAGS_FOLDER
          value: /opt/airflow/dags
        - name: AIRFLOW__LOGGING__BASE_LOG_FOLDER
          value: /opt/airflow/logs
          
        - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
          valueFrom:
            secretKeyRef:
              name: airflow-db-secret
              key: sql_alchemy_conn
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              name: airflow-db-secret
              key: password
        - name: PGUSER
          valueFrom:
            secretKeyRef:
              name: airflow-db-secret
              key: user
        - name: PGDATABASE
          valueFrom:
            secretKeyRef:
              name: airflow-db-secret
              key: db

        volumeMounts:
        - name: logs-volume
          mountPath: /opt/airflow/logs
        - name: pod-template-volume
          mountPath: /opt/airflow/pod_templates
        - name: shared-volume
          mountPath: /opt/airflow/shared

      volumes:
      - name: logs-volume
        persistentVolumeClaim:
          claimName: airflow-logs-pvc
      - name: pod-template-volume
        configMap:
          name: airflow-pod-template
          items:
            - key: pod_template.yaml
              path: pod_template.yaml
      - name: shared-volume
        persistentVolumeClaim:
          claimName: airflow-shared-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: airflow-webserver
  namespace: {{ .Values.namespace }}
spec:
  type: {{ .Values.service.webserver.type }}
  ports:
  - port: {{ .Values.service.webserver.port }}
    targetPort: 8080
  selector:
    app: airflow-webserver
