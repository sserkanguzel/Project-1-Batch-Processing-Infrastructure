apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-postgresql
  namespace: airflow
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
      annotations:
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/role: "eso"
        vault.hashicorp.com/agent-inject-secret-pg: "kv/data/app-secrets/airflow/db"
        vault.hashicorp.com/agent-inject-template-pg: |
          {{- with secret "kv/data/app-secrets/airflow/db" -}}
          export POSTGRES_USER="{{ .Data.data.user }}"
          export POSTGRES_PASSWORD="{{ .Data.data.password }}"
          export POSTGRES_DB="{{ .Data.data.db }}"
          {{- end }}
        vault.hashicorp.com/agent-inject-file-pg: "pg"
    spec:
      serviceAccountName: airflow
      containers:
        - name: postgres
          image: postgres:15-alpine
          command: ["/bin/bash", "-c"]
          args:
            - |
              echo "Sourcing Vault-injected secrets..."
              source /vault/secrets/pg
              exec docker-entrypoint.sh postgres
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: postgres-data
          emptyDir: {}




---
apiVersion: v1
kind: Service
metadata:
  name: postgres-postgresql
  namespace: {{ .Values.namespace }}
spec:
  type: ClusterIP
  ports:
  - port: 5432
    targetPort: 5432
  selector:
    app: postgres
