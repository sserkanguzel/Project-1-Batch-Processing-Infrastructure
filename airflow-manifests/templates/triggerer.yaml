apiVersion: apps/v1
kind: Deployment
metadata:
  name: airflow-triggerer
  namespace: {{ .Values.namespace }}
spec:
  replicas: {{ .Values.triggerer.replicas }}
  selector:
    matchLabels:
      app: airflow-triggerer
  template:
    metadata:
      labels:
        app: airflow-triggerer
      annotations:
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/role: "eso"
        vault.hashicorp.com/agent-inject-secret-sql: "kv/data/app-secrets/airflow/db"
        vault.hashicorp.com/agent-inject-template-sql: |
          {{`{{- with secret "kv/data/app-secrets/airflow/db" -}}`}}
          {{`export AIRFLOW__DATABASE__SQL_ALCHEMY_CONN="{{ .Data.data.sql_alchemy_conn }}"`}}
          {{`{{- end }}`}}
    spec:
      serviceAccountName: {{ .Values.airflow.serviceAccountName }}
      containers:
        - name: triggerer
          image: "{{ .Values.airflow.image.repository }}:{{ .Values.airflow.image.tag }}"
          command: ["/bin/bash", "-c"]
          args:
            - |
              until pg_isready -h postgres-postgresql.{{ .Values.namespace }}.svc.cluster.local -p 5432; do
                echo "Waiting for Postgres to be ready...";
                sleep 5;
              done;

              airflow db upgrade
              exec airflow triggerer
          env:
            - name: AIRFLOW__CORE__EXECUTOR
              value: {{ .Values.airflow.executor }}
            - name: AIRFLOW__KUBERNETES_EXECUTOR__NAMESPACE
              value: {{ .Values.namespace }}
            - name: AIRFLOW__CORE__FERNET_KEY
              value: {{ .Values.airflow.fernetKey }}
            - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
              value: ""  # Placeholder for Vault-injected env var
